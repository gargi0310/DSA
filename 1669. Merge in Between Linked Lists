/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        int diff = (b - a)+2;
        ListNode* temp = list1;
        int t = a - 1;
        while(t--){
            temp = temp->next;
        }

        ListNode* t2 = temp;

        while(diff--){
            temp = temp->next;
        }
        ListNode* curr = list2;
        t2->next = list2;
        while(curr-> next != NULL){
            curr = curr->next;
        }
        curr->next = temp;

        return list1;

    }
};
