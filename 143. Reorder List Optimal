/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverse(ListNode* head){
        ListNode* prev = NULL;
        ListNode* front = head;
        ListNode* temp = head;

        while(temp!=NULL){
            front = front->next;
            temp->next = prev;
            prev = temp;
            temp = front;
        }
        return prev;
    }

    void reorderList(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast->next!=NULL && fast->next->next!=NULL){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode* secondHalf = reverse(slow->next);
        slow -> next = NULL;

        ListNode* firstHalf = head;
        ListNode* temp = NULL;

        while(firstHalf!= NULL && secondHalf!=NULL){
            temp = firstHalf->next;
            firstHalf -> next = secondHalf;
            secondHalf = secondHalf->next;
            firstHalf->next->next = temp;
            firstHalf = temp;
        }

    }
};
